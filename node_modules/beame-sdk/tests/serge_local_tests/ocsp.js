/**
 * Created by zenit1 on 27/04/2017.
 */
"use strict";

const ocsp = require('ocsp');
const fs = require('fs');
const path = require('path');
const config = require('../../config/Config');
const request = require('request');
const ProvisionApi = require('../../src/services/ProvisionApi');

var rfc5280 = require('asn1.js-rfc5280');


function Utf8ArrayToStr(array) {
	var out, i, len, c;
	var char2, char3;

	out = "";
	len = array.length;
	i = 0;
	while(i < len) {
		c = array[i++];
		switch(c >> 4)
		{
			case 0: case 1: case 2: case 3: case 4: case 5: case 6: case 7:
			// 0xxxxxxx
			out += String.fromCharCode(c);
			break;
			case 12: case 13:
			// 110x xxxx   10xx xxxx
			char2 = array[i++];
			out += String.fromCharCode(((c & 0x1F) << 6) | (char2 & 0x3F));
			break;
			case 14:
				// 1110 xxxx  10xx xxxx  10xx xxxx
				char2 = array[i++];
				char3 = array[i++];
				out += String.fromCharCode(((c & 0x0F) << 12) |
					((char2 & 0x3F) << 6) |
					((char3 & 0x3F) << 0));
				break;
		}
	}

	return out;
}

var cert = ocsp.utils.toDER(fs.readFileSync('./x509-p2p.pem'), 'CERTIFICATE');
cert = rfc5280.Certificate.decode(cert, 'der');

console.log(cert)
//
//
//
// let x509 = require('x509'),
//     cert = x509.parseCert('./x509-old.pem'),
//     issuer = cert.extensions.authorityInformationAccess,
//     re = /^CA Issuers.*URI:(.+)/m,
//     m = issuer.match(re),
// 	issuerCertUrl = m && m.length ? m[1] : null;
//
// 	console.log(cert);
//
// 	return;
//
// 	if(!issuerCertUrl){
// 		console.error('No certs url found');
// 		return;
// 	}
//
// 	let certName = issuerCertUrl.substring(issuerCertUrl.lastIndexOf('/')+1);
//
// request.get(
// 	issuerCertUrl,
// 	{encoding:null},
// 	function (error, response, body) {
// 		if(!error && response.statusCode === 200){
// 			let cert = body;
// 			let certPath = path.join(config.issuerCertsPath,certName),
// 			    pemPath = path.join(config.issuerCertsPath,`${certName.substring(0,certName.lastIndexOf('.'))}.pem`);
//
// 			fs.writeFileSync(certPath,cert);
//
// 			const OpenSSLWrapper = require('../../src/utils/OpenSSLWrapper');
//
// 			OpenSSLWrapper.convertCertToPem(certPath,pemPath).then(()=>{
// 				fs.unlink(certPath);
// 			}).catch(e=>{
// 				console.error(e);
// 			})
// 		}
// 	}
// );
// //
//  console.log(m);
//

// return;
// ocsp.check({
// 	cert: fs.readFileSync('./x509-jr3.pem', 'utf8'),
// 	issuer: fs.readFileSync(config.issuerCaCertPath, 'utf8')
// }, function(err, res) {
// 	if (err)
// 	{
// 		console.error(err)
// 	}
// 	else{
// 		console.log(res);
// 	}
//
// });