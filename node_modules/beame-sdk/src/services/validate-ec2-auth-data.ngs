#!/usr/bin/env ngs
{
	data = ARGV[0].parse()
	data is not Hash throws InvalidArgument("Expecting Hash")
	%[doc sig] % { A not in data throws InvalidArgument("The hash must contain key '$A'") }

	# MaybeSfx - don't break if `...` will be trimming the output
	tmpdir = `mktemp --tmpdir -d validate-ec2-auth-data.ngs.XXXXXXXXXX` - MaybeSfx('\n')

	debug("Using temp dir at $tmpdir")

	F cleanup() {
		if tmpdir {
			debug("Cleaning up $tmpdir")
			$(rm -r $tmpdir)
		}
	}

	F uncaught_exception_hook(e:Exception) {
		cleanup()
		guard false
	}

	doc_file = tmpdir / "doc"
	sig_file = tmpdir / "sig"
	cert_file = tmpdir / "cert"

	# Cert downloaded from https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-identity-documents.html
	cert = '-----BEGIN CERTIFICATE-----\nMIIC7TCCAq0CCQCWukjZ5V4aZzAJBgcqhkjOOAQDMFwxCzAJBgNVBAYTAlVTMRkw\nFwYDVQQIExBXYXNoaW5ndG9uIFN0YXRlMRAwDgYDVQQHEwdTZWF0dGxlMSAwHgYD\nVQQKExdBbWF6b24gV2ViIFNlcnZpY2VzIExMQzAeFw0xMjAxMDUxMjU2MTJaFw0z\nODAxMDUxMjU2MTJaMFwxCzAJBgNVBAYTAlVTMRkwFwYDVQQIExBXYXNoaW5ndG9u\nIFN0YXRlMRAwDgYDVQQHEwdTZWF0dGxlMSAwHgYDVQQKExdBbWF6b24gV2ViIFNl\ncnZpY2VzIExMQzCCAbcwggEsBgcqhkjOOAQBMIIBHwKBgQCjkvcS2bb1VQ4yt/5e\nih5OO6kK/n1Lzllr7D8ZwtQP8fOEpp5E2ng+D6Ud1Z1gYipr58Kj3nssSNpI6bX3\nVyIQzK7wLclnd/YozqNNmgIyZecN7EglK9ITHJLP+x8FtUpt3QbyYXJdmVMegN6P\nhviYt5JH/nYl4hh3Pa1HJdskgQIVALVJ3ER11+Ko4tP6nwvHwh6+ERYRAoGBAI1j\nk+tkqMVHuAFcvAGKocTgsjJem6/5qomzJuKDmbJNu9Qxw3rAotXau8Qe+MBcJl/U\nhhy1KHVpCGl9fueQ2s6IL0CaO/buycU1CiYQk40KNHCcHfNiZbdlx1E9rpUp7bnF\nlRa2v1ntMX3caRVDdbtPEWmdxSCYsYFDk4mZrOLBA4GEAAKBgEbmeve5f8LIE/Gf\nMNmP9CM5eovQOGx5ho8WqD+aTebs+k2tn92BBPqeZqpWRa5P/+jrdKml1qx4llHW\nMXrs3IgIb6+hUIB+S8dz8/mmO0bpr76RoZVCXYab2CZedFut7qc3WUH9+EUAH5mw\nvSeDCOUMYQR7R9LINYwouHIziqQYMAkGByqGSM44BAMDLwAwLAIUWXBlk40xTwSw\n7HX32MxXYruse9ACFBNGmdX2ZBrVNGrN9N2f6ROk0k9K\n-----END CERTIFICATE-----\n'

	$(echo -n ${data.doc} >$doc_file)
	$(echo -n ${data.sig} >$sig_file)
	$(echo -n $cert >$cert_file)


	$(openssl smime -verify -in ${sig_file} -inform PEM -content ${doc_file} -certfile ${cert_file} -noverify)

	instance_data = data.doc.parse()
	instances = ``aws ec2 describe-instances --region ${instance_data.region} --filters "Name=instance-id,Values=${instance_data.instanceId}"``
	assert(instances[0].State.Name == 'running', 'Instance must be running')

	cleanup()
	true
}
